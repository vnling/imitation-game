//fetch route from server

let sampleOne = document.getElementById('sample1');
let sampleTwo = document.getElementById('sample2');
let sampleThree = document.getElementById('sample3');
let instruction = document.getElementById('instruction');
let textInput = "";
let samplesArray = [sampleOne, sampleTwo, sampleThree];

window.onload = function () {
  shuffleArray(samplesArray);
  fetch("/scifi-random")
    .then(response => response.json())
    .then(data => {
      console.log(data.message);
      let humanText = data.message[1];
      textInput = data.message[0];
      sendVector(humanText);
    })
  checkAnswer();
}

function shuffleArray(array) {
  for (var i = array.length - 1; i > 0; i--) {
    var j = Math.floor(Math.random() * (i + 1));
    var temp = array[i];
    array[i] = array[j];
    array[j] = temp;
  }
  console.log(samplesArray);
}

function checkAnswer() {
  samplesArray[0].onclick = () => {
    instruction.innerHTML = "This is a text sample generated by the machine learning model GPT-2, which was trained by the OpenAI research company. Click <a href='https://openai.com/blog/better-language-models/' target='blank'>here</a> to learn more about GPT-2, or refresh this page to try again!";
  }

  samplesArray[1].onclick = () => {
    instruction.innerHTML = "Correct! This is the human-generated text sample; the other two samples were generated by <a href='https://openai.com/blog/better-language-models/' target='blank'>GPT-2</a> and a <a href='https://hjweide.github.io/char-rnn#:~:text=The%20term%20%E2%80%9Cchar%2Drnn%E2%80%9D,rnn%20as%20a%20classification%20model.' target='blank'>charRNN</a>. Refresh this page to try again!";
  }

  samplesArray[2].onclick = () => {
    instruction.innerHTML = "This is a text sample generated by a <a href='https://hjweide.github.io/char-rnn#:~:text=The%20term%20%E2%80%9Cchar%2Drnn%E2%80%9D,rnn%20as%20a%20classification%20model.' target='blank'>charRNN</a> model. Refresh this page to try again!";
  }
}

async function sendVector(humanText) {
  console.log("sending text");

  const data = {
    prompt: textInput
  }

  const info = {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify(data),
  };

  console.log(data);

  const response = await fetch("/runwayml", info);
  console.log("input:", info.body);
  const outputs = await response.json();
  const script = outputs.generated_text;
  console.log("output:", script);
  console.log("got text");
  samplesArray[0].innerHTML = script;
  samplesArray[1].innerHTML = humanText;
}